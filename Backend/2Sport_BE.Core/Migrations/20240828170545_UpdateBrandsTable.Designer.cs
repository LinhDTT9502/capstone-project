// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2Sport_BE.Repository.Models;

#nullable disable

namespace _2Sport_BE.Repository.Migrations
{
    [DbContext(typeof(TwoSportDBContext))]
    [Migration("20240828170545_UpdateBrandsTable")]
    partial class UpdateBrandsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BlogName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("MainImageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MainImagePath")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("SportId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportId");

                    b.HasIndex(new[] { "Id" }, "UQ__Blogs__3214EC0624FD893D")
                        .IsUnique();

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__Brands__3214EC06D1E78A79")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.BrandCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Id" }, "UQ__BrandCat__3214EC069448474C")
                        .IsUnique();

                    b.ToTable("BrandCategory", (string)null);
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "UQ__Carts__3214EC067447A3E7")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CartId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "Id" }, "UQ__CartItem__3214EC0670276BEC")
                        .IsUnique();

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__Categori__3214EC06CEC2D1B1")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClassificationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__Classifi__3214EC06EE82EB43")
                        .IsUnique();

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ImagesVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BlogId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VideoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "Id" }, "UQ__ImagesVi__3214EC06F5E0B1F0")
                        .IsUnique();

                    b.ToTable("ImagesVideos");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ImportHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImportCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LotCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.HasIndex(new[] { "Id" }, "UQ__ImportHi__3214EC06CD9E1B2D")
                        .IsUnique();

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BlogId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "UQ__Likes__3214EC062F085310")
                        .IsUnique();

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("IntoMoney")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ShipmentDetailId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TransportFee")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("TransportUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ShipmentDetailId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "UQ__Orders__3214EC069E0C3512")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "Id" }, "UQ__OrderDet__3214EC06FADB848B")
                        .IsUnique();

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__PaymentM__3214EC068855EE74")
                        .IsUnique();

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ClassificationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ListedPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("MainImageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MainImagePath")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Offers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("SportId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("SportId");

                    b.HasIndex(new[] { "Id" }, "UQ__Products__3214EC06CF2D8A01")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.RefreshToken", b =>
                {
                    b.Property<int>("RefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefreshTokenId"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Used")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("RefreshTokenId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "RefreshTokenId" }, "UQ__RefreshT__F5845E38F471A76F")
                        .IsUnique();

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Review1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Review");

                    b.Property<decimal?>("Star")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "UQ__Reviews__3214EC0637DB1E90")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__Roles__3214EC06A0E5B809")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ShipmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "UQ__Shipment__3214EC06D1B6B308")
                        .IsUnique();

                    b.ToTable("ShipmentDetails");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__Sports__3214EC063D489370")
                        .IsUnique();

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "UQ__Supplier__3214EC061A804565")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FacebookId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Salary")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Id" }, "UQ__Users__3214EC065D802F08")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "Id" }, "UQ__Warehous__3214EC06033043FA")
                        .IsUnique();

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Blog", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Sport", "Sport")
                        .WithMany("Blogs")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Blogs__SportId__73BA3083");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.BrandCategory", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Brand", "Brand")
                        .WithMany("BrandCategories")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BrandCate__Brand__75A278F5");

                    b.HasOne("_2Sport_BE.Repository.Models.Category", "Category")
                        .WithMany("BrandCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BrandCate__Categ__74AE54BC");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Cart", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Carts__UserId__787EE5A0");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.CartItem", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CartItems__CartI__778AC167");

                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CartItems__Produ__76969D2E");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ImagesVideo", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Blog", "Blog")
                        .WithMany("ImagesVideos")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ImagesVid__BlogI__7A672E12");

                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("ImagesVideos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ImagesVid__Produ__797309D9");

                    b.Navigation("Blog");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ImportHistory", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("ImportHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ImportHis__Produ__7B5B524B");

                    b.HasOne("_2Sport_BE.Repository.Models.Supplier", "Supplier")
                        .WithMany("ImportHistories")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ImportHis__Suppl__7C4F7684");

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Like", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Blog", "Blog")
                        .WithMany("Likes")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Likes__BlogId__7E37BEF6");

                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("Likes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Likes__ProductId__7D439ABD");

                    b.HasOne("_2Sport_BE.Repository.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Likes__UserId__7F2BE32F");

                    b.Navigation("Blog");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Order", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders__PaymentM__02FC7413");

                    b.HasOne("_2Sport_BE.Repository.Models.ShipmentDetail", "ShipmentDetail")
                        .WithMany("Orders")
                        .HasForeignKey("ShipmentDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders__Shipment__02084FDA");

                    b.HasOne("_2Sport_BE.Repository.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders__UserId__03F0984C");

                    b.Navigation("PaymentMethod");

                    b.Navigation("ShipmentDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.OrderDetail", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__00200768");

                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Produ__01142BA1");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Product", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__BrandI__04E4BC85");

                    b.HasOne("_2Sport_BE.Repository.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__05D8E0BE");

                    b.HasOne("_2Sport_BE.Repository.Models.Classification", "Classification")
                        .WithMany("Products")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__Classi__06CD04F7");

                    b.HasOne("_2Sport_BE.Repository.Models.Sport", "Sport")
                        .WithMany("Products")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__SportI__07C12930");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Classification");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.RefreshToken", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RefreshTo__UserI__08B54D69");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Review", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__Product__09A971A2");

                    b.HasOne("_2Sport_BE.Repository.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__UserId__0A9D95DB");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ShipmentDetail", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.User", "User")
                        .WithMany("ShipmentDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ShipmentD__UserI__0B91BA14");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.User", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__0C85DE4D");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Warehouse", b =>
                {
                    b.HasOne("_2Sport_BE.Repository.Models.Product", "Product")
                        .WithMany("Warehouses")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Warehouse__Produ__0D7A0286");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Blog", b =>
                {
                    b.Navigation("ImagesVideos");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Brand", b =>
                {
                    b.Navigation("BrandCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Category", b =>
                {
                    b.Navigation("BrandCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Classification", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.PaymentMethod", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("ImagesVideos");

                    b.Navigation("ImportHistories");

                    b.Navigation("Likes");

                    b.Navigation("OrderDetails");

                    b.Navigation("Reviews");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.ShipmentDetail", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Sport", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.Supplier", b =>
                {
                    b.Navigation("ImportHistories");
                });

            modelBuilder.Entity("_2Sport_BE.Repository.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Likes");

                    b.Navigation("Orders");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Reviews");

                    b.Navigation("ShipmentDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
